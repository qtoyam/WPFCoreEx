<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:WPFCoreEx.Controls">
	<!--#region ButtonEx-->
	<Style TargetType="{x:Type local:ButtonEx}">
		<Setter Property="CornerRadius" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Cursor" Value="Hand"/>
		<!--#region Background defaults-->
		<Setter Property="Background" Value="#FF201A3E"/>
		<Setter Property="BackgroundMouseOver" Value="#FF191430"/>
		<Setter Property="BackgroundClick" Value="#FF110C29"/>
		<Setter Property="BackgroundDisabled" Value="#FF767676"/>
		<!--#endregion-->
		<Setter Property="Foreground" Value="#FFE1DEF0"/>
		<Setter Property="BorderBrush" Value="#FF9C90D4"/>
		<Setter Property="BorderThickness" Value="3"/>
		<!--#region opacity defaults-->
		<Setter Property="Opacity" Value="1"/>
		<Setter Property="OpacityDefault" Value="1"/>
		<Setter Property="OpacityMouseOver" Value="1"/>
		<Setter Property="OpacityClick" Value="1"/>
		<!--#endregion-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate x:Name="controlTemplate" TargetType="{x:Type local:ButtonEx}">
					<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true"
							Opacity="{TemplateBinding OpacityDefault}" CornerRadius="{TemplateBinding CornerRadius}">
						<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="Opacity" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OpacityMouseOver, Mode=OneWay}"/>
							<Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundMouseOver, Mode=OneWay}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="border" Property="Opacity" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OpacityClick, Mode=OneWay}"/>
							<Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundClick, Mode=OneWay}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundDisabled, Mode=OneWay}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion ButtonEx-->

	<!--#region MenuItemEx-->
	<SolidColorBrush x:Key="GeomBrush" Color="#FF212121"/>
	<Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
	<Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
	<Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
	<Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
	<Style TargetType="{x:Type local:MenuItemEx}">
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="BackgroundPopup" Value="Gray"/>
		<Setter Property="BackgroundHighlighted" Value="DimGray"/>
		<Setter Property="CornerRadius" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:MenuItemEx}">
					<Border x:Name="templateRoot" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Height="22" SnapsToDevicePixels="true"
								Background="{TemplateBinding BackgroundPopup}" CornerRadius="{TemplateBinding CornerRadius}">
						<Grid Margin="-1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="13"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
								<ColumnDefinition MinWidth="13" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
							</Grid.ColumnDefinitions>
							<ContentPresenter x:Name="menuHeaderContainer" ContentSource="Header" Grid.Column="1" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
							<TextBlock x:Name="menuGestureText" Grid.Column="2" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
							<ContentPresenter Grid.Column="3" x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
							<Border x:Name="Glyph" Grid.Column="3" Width="Auto" MinWidth="22" Visibility="Hidden">
								<Path Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource GeomBrush}" Height="11" Width="10"
									  HorizontalAlignment="Center" VerticalAlignment="Center"/>
							</Border>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Icon" Value="{x:Null}">
							<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="IsCheckable" Value="False">
							<Setter Property="Visibility" TargetName="Glyph" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Visibility" TargetName="Glyph" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsHighlighted" Value="True">
							<Setter Property="Background" TargetName="templateRoot" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundHighlighted}"/>
							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundHighlightedBorder}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type local:MenuItemEx}">
							<Border x:Name="templateRoot" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true"
										Background="{TemplateBinding BackgroundPopup}" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Menu}, Path=ActualHeight}">
								<Grid VerticalAlignment="Center">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<ContentPresenter ContentSource="Header" Grid.Column="1" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
									<Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" PlacementTarget="{Binding ElementName=templateRoot}">
										<Border x:Name="SubMenuBorder" Padding="2"
													CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding BackgroundPopup}">
											<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
										</Border>
									</Popup>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsSuspendingPopupAnimation" Value="true">
									<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
								</Trigger>
								<Trigger Property="IsHighlighted" Value="True">
									<Setter Property="Background" TargetName="templateRoot" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundHighlighted}"/>
									<Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundHighlightedBorder}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Padding" Value="6,0"/>
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type local:MenuItemEx}">
							<Border x:Name="templateRoot" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true"
									Background="{TemplateBinding BackgroundPopup}" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Menu}, Path=ActualHeight}">
								<Grid VerticalAlignment="Center">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
									<Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource GeomBrush}" Margin="3" VerticalAlignment="Center" Visibility="Collapsed"/>
									<ContentPresenter ContentSource="Header" Grid.Column="1" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="Icon" Value="{x:Null}">
									<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
								</Trigger>
								<Trigger Property="IsChecked" Value="true">
									<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
									<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
								</Trigger>
								<Trigger Property="IsHighlighted" Value="True">
									<Setter Property="Background" TargetName="templateRoot" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundHighlighted}"/>
									<Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundHighlightedBorder}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Padding" Value="6,0"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type local:MenuItemEx}">
							<Border x:Name="templateRoot" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Height="22" SnapsToDevicePixels="true"
										Background="{TemplateBinding BackgroundPopup}" CornerRadius="{TemplateBinding CornerRadius}">
								<Grid Margin="-1">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="13"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="10"/>
										<ColumnDefinition Width="22"/>
									</Grid.ColumnDefinitions>
									<ContentPresenter ContentSource="Header" Grid.Column="1" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
									<Path x:Name="RightArrow" Grid.Column="3" Data="{StaticResource RightArrow}" Fill="{StaticResource GeomBrush}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/>
									<Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3">
										<Border x:Name="SubMenuBorder" Padding="2"
													CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding BackgroundPopup}">
											<Grid>
												<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
											</Grid>
										</Border>
									</Popup>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsSuspendingPopupAnimation" Value="true">
									<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
								</Trigger>
								<Trigger Property="IsHighlighted" Value="True">
									<Setter Property="Background" TargetName="templateRoot" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundHighlighted}"/>
									<Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundHighlightedBorder}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<!--#endregion MenuItemEx-->

	
	<!--#region TextBoxEx-->
	<SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
	<SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
	<SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
	<Style TargetType="local:TextBoxEx">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="CornerRadius" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:TextBoxEx}">
					<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True"
							CornerRadius="{TemplateBinding CornerRadius}">
						<Grid>
							<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
							<TextBlock Focusable="False" IsHitTestVisible="False" x:Name="Hint" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding HintText}"
									   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									   Visibility="{TemplateBinding HintTextVisibility}"
									   Opacity="0.5" Margin="{TemplateBinding Padding}" Padding="2,0,0,0"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" TargetName="border" Value="0.56"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
					<Condition Property="IsSelectionActive" Value="false"/>
				</MultiTrigger.Conditions>
				<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
			</MultiTrigger>
		</Style.Triggers>
	</Style>
	<!--#endregion TextBoxEx-->
</ResourceDictionary>
