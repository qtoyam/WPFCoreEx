<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:exc="clr-namespace:WPFCore.Controls">

	<!--#region ButtonEx-->
	<Style TargetType="{x:Type exc:ButtonEx}">
		<Setter Property="CornerRadius"
				Value="0" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="Cursor"
				Value="Hand" />
		<!--#region Background defaults-->
		<Setter Property="Background"
				Value="#BB86FC" />
		<Setter Property="BackgroundMouseOver"
				Value="#FFA26FE0" />
		<Setter Property="BackgroundClick"
				Value="#FF8351BF" />
		<Setter Property="BackgroundDisabled"
				Value="#FF767676" />
		<!--#endregion-->
		<Setter Property="BorderBrush"
				Value="{x:Null}" />
		<Setter Property="BorderThickness"
				Value="0" />
		<!--#region opacity defaults-->
		<Setter Property="Opacity"
				Value="1" />
		<Setter Property="OpacityDefault"
				Value="1" />
		<Setter Property="OpacityMouseOver"
				Value="1" />
		<Setter Property="OpacityClick"
				Value="1" />
		<!--#endregion-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate x:Name="controlTemplate"
								 TargetType="{x:Type exc:ButtonEx}">
					<Border x:Name="border"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							SnapsToDevicePixels="true"
							Opacity="{TemplateBinding OpacityDefault}"
							CornerRadius="{TemplateBinding CornerRadius}">
						<ContentPresenter x:Name="contentPresenter"
										  Focusable="False"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  Margin="{TemplateBinding Padding}"
										  RecognizesAccessKey="True"
										  Content="{TemplateBinding Content}"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="True">
							<Setter TargetName="border"
									Property="Opacity"
									Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OpacityMouseOver, Mode=OneWay}" />
							<Setter TargetName="border"
									Property="Background"
									Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundMouseOver, Mode=OneWay}" />
						</Trigger>
						<Trigger Property="IsPressed"
								 Value="True">
							<Setter TargetName="border"
									Property="Opacity"
									Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OpacityClick, Mode=OneWay}" />
							<Setter TargetName="border"
									Property="Background"
									Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundClick, Mode=OneWay}" />
						</Trigger>
						<Trigger Property="IsEnabled"
								 Value="False">
							<Setter TargetName="border"
									Property="Background"
									Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundDisabled, Mode=OneWay}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion ButtonEx-->

	<!--#region MenuItemEx-->
	<SolidColorBrush x:Key="Menu.Static.Background"
					 Color="#FFF0F0F0" />
	<SolidColorBrush x:Key="Menu.Static.Border"
					 Color="#FF999999" />
	<SolidColorBrush x:Key="Menu.Static.Foreground"
					 Color="#FF212121" />
	<SolidColorBrush x:Key="Menu.Static.Separator"
					 Color="#FFD7D7D7" />
	<SolidColorBrush x:Key="Menu.Disabled.Foreground"
					 Color="#FF707070" />
	<SolidColorBrush x:Key="MenuItem.Selected.Background"
					 Color="#3D26A0DA" />
	<SolidColorBrush x:Key="MenuItem.Selected.Border"
					 Color="#FF26A0DA" />
	<SolidColorBrush x:Key="MenuItem.Highlight.Background"
					 Color="#3D26A0DA" />
	<SolidColorBrush x:Key="MenuItem.Highlight.Border"
					 Color="#FF26A0DA" />
	<SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background"
					 Color="#0A000000" />
	<SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border"
					 Color="#21000000" />
	<MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />
	<Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
	<Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
	<Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
	<Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
	<Style x:Key="MenuScrollButton"
		   BasedOn="{x:Null}"
		   TargetType="{x:Type RepeatButton}">
		<Setter Property="ClickMode"
				Value="Hover" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border x:Name="templateRoot"
							Background="Transparent"
							BorderBrush="Transparent"
							BorderThickness="1"
							SnapsToDevicePixels="true">
						<ContentPresenter HorizontalAlignment="Center"
										  Margin="6"
										  VerticalAlignment="Center" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}"
		   BasedOn="{x:Null}"
		   TargetType="{x:Type ScrollViewer}">
		<Setter Property="HorizontalScrollBarVisibility"
				Value="Hidden" />
		<Setter Property="VerticalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Border Grid.Column="0"
								Grid.Row="1">
							<ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}"
													Margin="{TemplateBinding Padding}" />
						</Border>
						<RepeatButton Command="{x:Static ScrollBar.LineUpCommand}"
									  CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									  Grid.Column="0"
									  Focusable="false"
									  Grid.Row="0"
									  Style="{StaticResource MenuScrollButton}">
							<RepeatButton.Visibility>
								<MultiBinding ConverterParameter="0"
											  Converter="{StaticResource MenuScrollingVisibilityConverter}"
											  FallbackValue="Visibility.Collapsed">
									<Binding Path="ComputedVerticalScrollBarVisibility"
											 RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="VerticalOffset"
											 RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="ExtentHeight"
											 RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="ViewportHeight"
											 RelativeSource="{RelativeSource TemplatedParent}" />
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Data="{StaticResource UpArrow}"
								  Fill="{StaticResource Menu.Static.Foreground}" />
						</RepeatButton>
						<RepeatButton Command="{x:Static ScrollBar.LineDownCommand}"
									  CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									  Grid.Column="0"
									  Focusable="false"
									  Grid.Row="2"
									  Style="{StaticResource MenuScrollButton}">
							<RepeatButton.Visibility>
								<MultiBinding ConverterParameter="100"
											  Converter="{StaticResource MenuScrollingVisibilityConverter}"
											  FallbackValue="Visibility.Collapsed">
									<Binding Path="ComputedVerticalScrollBarVisibility"
											 RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="VerticalOffset"
											 RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="ExtentHeight"
											 RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="ViewportHeight"
											 RelativeSource="{RelativeSource TemplatedParent}" />
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Data="{StaticResource DownArrow}"
								  Fill="{StaticResource Menu.Static.Foreground}" />
						</RepeatButton>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<ControlTemplate x:Key="TopLevelItemTemplateKey"
					 TargetType="{x:Type exc:MenuItemEx}">
		<Border x:Name="templateRoot"
				Background="{TemplateBinding Background}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
				SnapsToDevicePixels="true">
			<Grid VerticalAlignment="Center">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
								  ContentSource="Icon"
								  HorizontalAlignment="Center"
								  Height="16"
								  Margin="3"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								  VerticalAlignment="Center"
								  Width="16" />
				<Path x:Name="GlyphPanel"
					  Data="{StaticResource Checkmark}"
					  FlowDirection="LeftToRight"
					  Fill="{StaticResource Menu.Static.Foreground}"
					  Margin="3"
					  VerticalAlignment="Center"
					  Visibility="Collapsed" />
				<ContentPresenter ContentSource="Header"
								  Grid.Column="1"
								  Margin="{TemplateBinding Padding}"
								  RecognizesAccessKey="True"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon"
					 Value="{x:Null}">
				<Setter Property="Visibility"
						TargetName="Icon"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked"
					 Value="true">
				<Setter Property="Visibility"
						TargetName="GlyphPanel"
						Value="Visible" />
				<Setter Property="Visibility"
						TargetName="Icon"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted"
					 Value="True">
				<Setter Property="Background"
						TargetName="templateRoot"
						Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundMouseOver}" />
				<!--<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>-->
				<!--<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>-->
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter Property="TextElement.Foreground"
						TargetName="templateRoot"
						Value="{StaticResource Menu.Disabled.Foreground}" />
				<Setter Property="Fill"
						TargetName="GlyphPanel"
						Value="{StaticResource Menu.Disabled.Foreground}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHighlighted"
							   Value="True" />
					<Condition Property="IsEnabled"
							   Value="False" />
				</MultiTrigger.Conditions>
				<Setter Property="Background"
						TargetName="templateRoot"
						Value="{StaticResource MenuItem.Highlight.Disabled.Background}" />
				<Setter Property="BorderBrush"
						TargetName="templateRoot"
						Value="{StaticResource MenuItem.Highlight.Disabled.Border}" />
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="TopLevelHeaderTemplateKey"
					 TargetType="{x:Type exc:MenuItemEx}">
		<Border x:Name="templateRoot"
				Background="{TemplateBinding Background}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
				SnapsToDevicePixels="true">
			<Grid VerticalAlignment="Center">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
								  ContentSource="Icon"
								  HorizontalAlignment="Center"
								  Height="16"
								  Margin="3"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								  VerticalAlignment="Center"
								  Width="16" />
				<Path x:Name="GlyphPanel"
					  Data="{StaticResource Checkmark}"
					  FlowDirection="LeftToRight"
					  Fill="{TemplateBinding Foreground}"
					  Margin="3"
					  VerticalAlignment="Center"
					  Visibility="Collapsed" />
				<ContentPresenter ContentSource="Header"
								  Grid.Column="1"
								  Margin="{TemplateBinding Padding}"
								  RecognizesAccessKey="True"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<Popup x:Name="PART_Popup"
					   AllowsTransparency="true"
					   Focusable="false"
					   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
					   Placement="Bottom"
					   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
					   PlacementTarget="{Binding ElementName=templateRoot}">
					<Border x:Name="SubMenuBorder"
							Background="Transparent">
						<ScrollViewer x:Name="SubMenuScrollViewer"
									  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas HorizontalAlignment="Left"
										Height="0"
										VerticalAlignment="Top"
										Width="0">
									<Rectangle x:Name="OpaqueRect"
											   Fill="{Binding Background, ElementName=SubMenuBorder}"
											   Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
											   Width="{Binding ActualWidth, ElementName=SubMenuBorder}" />
								</Canvas>
								<Rectangle Fill="{StaticResource Menu.Static.Separator}"
										   HorizontalAlignment="Left"
										   Margin="29,2,0,2"
										   Width="1" />
								<ItemsPresenter x:Name="ItemsPresenter"
												KeyboardNavigation.DirectionalNavigation="Cycle"
												Grid.IsSharedSizeScope="true"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												KeyboardNavigation.TabNavigation="Cycle" />
							</Grid>
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation"
					 Value="true">
				<Setter Property="PopupAnimation"
						TargetName="PART_Popup"
						Value="None" />
			</Trigger>
			<Trigger Property="Icon"
					 Value="{x:Null}">
				<Setter Property="Visibility"
						TargetName="Icon"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked"
					 Value="true">
				<Setter Property="Visibility"
						TargetName="GlyphPanel"
						Value="Visible" />
				<Setter Property="Visibility"
						TargetName="Icon"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted"
					 Value="True">
				<Setter Property="Background"
						TargetName="templateRoot"
						Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundMouseOver}" />
				<!--<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>-->
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter Property="TextElement.Foreground"
						TargetName="templateRoot"
						Value="{StaticResource Menu.Disabled.Foreground}" />
				<Setter Property="Fill"
						TargetName="GlyphPanel"
						Value="{StaticResource Menu.Disabled.Foreground}" />
			</Trigger>
			<Trigger Property="ScrollViewer.CanContentScroll"
					 SourceName="SubMenuScrollViewer"
					 Value="false">
				<Setter Property="Canvas.Top"
						TargetName="OpaqueRect"
						Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
				<Setter Property="Canvas.Left"
						TargetName="OpaqueRect"
						Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<ControlTemplate x:Key="SubmenuItemTemplateKey"
					 TargetType="{x:Type exc:MenuItemEx}">
		<Border x:Name="templateRoot"
				Background="{TemplateBinding Background}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
				Height="22"
				SnapsToDevicePixels="true">
			<Grid Margin="-1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition MinWidth="22"
									  SharedSizeGroup="MenuItemIconColumnGroup"
									  Width="Auto" />
					<ColumnDefinition Width="13" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="30" />
					<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup"
									  Width="Auto" />
					<ColumnDefinition Width="20" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
								  ContentSource="Icon"
								  HorizontalAlignment="Center"
								  Height="16"
								  Margin="3"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								  VerticalAlignment="Center"
								  Width="16" />
				<Border x:Name="GlyphPanel"
						Background="{StaticResource MenuItem.Selected.Background}"
						BorderBrush="{StaticResource MenuItem.Selected.Border}"
						BorderThickness="1"
						ClipToBounds="False"
						HorizontalAlignment="Center"
						Height="22"
						Margin="-1,0,0,0"
						VerticalAlignment="Center"
						Visibility="Hidden"
						Width="22">
					<Path x:Name="Glyph"
						  Data="{StaticResource Checkmark}"
						  FlowDirection="LeftToRight"
						  Fill="{StaticResource Menu.Static.Foreground}"
						  Height="11"
						  Width="10" />
				</Border>
				<ContentPresenter x:Name="menuHeaderContainer"
								  ContentSource="Header"
								  Grid.Column="2"
								  HorizontalAlignment="Left"
								  Margin="{TemplateBinding Padding}"
								  RecognizesAccessKey="True"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								  VerticalAlignment="Center" />
				<TextBlock x:Name="menuGestureText"
						   Grid.Column="4"
						   Margin="{TemplateBinding Padding}"
						   Opacity="0.7"
						   Text="{TemplateBinding InputGestureText}"
						   VerticalAlignment="Center" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon"
					 Value="{x:Null}">
				<Setter Property="Visibility"
						TargetName="Icon"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="GlyphPanel"
						Value="Visible" />
				<Setter Property="Visibility"
						TargetName="Icon"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted"
					 Value="True">
				<Setter Property="Background"
						TargetName="templateRoot"
						Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundMouseOver}" />
				<!--<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
					<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>-->
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter Property="TextElement.Foreground"
						TargetName="templateRoot"
						Value="{StaticResource Menu.Disabled.Foreground}" />
				<Setter Property="Fill"
						TargetName="Glyph"
						Value="{StaticResource Menu.Disabled.Foreground}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHighlighted"
							   Value="True" />
					<Condition Property="IsEnabled"
							   Value="False" />
				</MultiTrigger.Conditions>
				<Setter Property="Background"
						TargetName="templateRoot"
						Value="{StaticResource MenuItem.Highlight.Disabled.Background}" />
				<Setter Property="BorderBrush"
						TargetName="templateRoot"
						Value="{StaticResource MenuItem.Highlight.Disabled.Border}" />
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="SubmenuHeaderTemplateKey"
					 TargetType="{x:Type exc:MenuItemEx}">
		<Border x:Name="templateRoot"
				Background="{TemplateBinding Background}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
				Height="22"
				SnapsToDevicePixels="true">
			<Grid Margin="-1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition MinWidth="22"
									  SharedSizeGroup="MenuItemIconColumnGroup"
									  Width="Auto" />
					<ColumnDefinition Width="13" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="30" />
					<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup"
									  Width="Auto" />
					<ColumnDefinition Width="20" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
								  ContentSource="Icon"
								  HorizontalAlignment="Center"
								  Height="16"
								  Margin="3"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								  VerticalAlignment="Center"
								  Width="16" />
				<Border x:Name="GlyphPanel"
						Background="{StaticResource MenuItem.Highlight.Background}"
						BorderBrush="{StaticResource MenuItem.Highlight.Border}"
						BorderThickness="1"
						Height="22"
						Margin="-1,0,0,0"
						VerticalAlignment="Center"
						Visibility="Hidden"
						Width="22">
					<Path x:Name="Glyph"
						  Data="{DynamicResource Checkmark}"
						  FlowDirection="LeftToRight"
						  Fill="{StaticResource Menu.Static.Foreground}"
						  Height="11"
						  Width="9" />
				</Border>
				<ContentPresenter ContentSource="Header"
								  Grid.Column="2"
								  HorizontalAlignment="Left"
								  Margin="{TemplateBinding Padding}"
								  RecognizesAccessKey="True"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								  VerticalAlignment="Center" />
				<TextBlock Grid.Column="4"
						   Margin="{TemplateBinding Padding}"
						   Opacity="0.7"
						   Text="{TemplateBinding InputGestureText}"
						   VerticalAlignment="Center" />
				<Path x:Name="RightArrow"
					  Grid.Column="5"
					  Data="{StaticResource RightArrow}"
					  Fill="{StaticResource Menu.Static.Foreground}"
					  HorizontalAlignment="Left"
					  Margin="10,0,0,0"
					  VerticalAlignment="Center" />
				<Popup x:Name="PART_Popup"
					   AllowsTransparency="true"
					   Focusable="false"
					   HorizontalOffset="-2"
					   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
					   Placement="Right"
					   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
					   VerticalOffset="1">
					<Border x:Name="SubMenuBorder"
							Background="Transparent">
						<ScrollViewer x:Name="SubMenuScrollViewer"
									  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas HorizontalAlignment="Left"
										Height="0"
										VerticalAlignment="Top"
										Width="0">
									<Rectangle x:Name="OpaqueRect"
											   Fill="{Binding Background, ElementName=SubMenuBorder}"
											   Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
											   Width="{Binding ActualWidth, ElementName=SubMenuBorder}" />
								</Canvas>
								<Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
										   HorizontalAlignment="Left"
										   Margin="29,2,0,2"
										   Width="1" />
								<ItemsPresenter x:Name="ItemsPresenter"
												KeyboardNavigation.DirectionalNavigation="Cycle"
												Grid.IsSharedSizeScope="true"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												KeyboardNavigation.TabNavigation="Cycle" />
							</Grid>
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation"
					 Value="true">
				<Setter Property="PopupAnimation"
						TargetName="PART_Popup"
						Value="None" />
			</Trigger>
			<Trigger Property="Icon"
					 Value="{x:Null}">
				<Setter Property="Visibility"
						TargetName="Icon"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="GlyphPanel"
						Value="Visible" />
				<Setter Property="Visibility"
						TargetName="Icon"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted"
					 Value="True">
				<Setter Property="Background"
						TargetName="templateRoot"
						Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundMouseOver}" />
				<!--<Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
					<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>-->
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter Property="TextElement.Foreground"
						TargetName="templateRoot"
						Value="{StaticResource Menu.Disabled.Foreground}" />
				<Setter Property="Fill"
						TargetName="Glyph"
						Value="{StaticResource Menu.Disabled.Foreground}" />
				<Setter Property="Fill"
						TargetName="RightArrow"
						Value="{StaticResource Menu.Disabled.Foreground}" />
			</Trigger>
			<Trigger Property="ScrollViewer.CanContentScroll"
					 SourceName="SubMenuScrollViewer"
					 Value="false">
				<Setter Property="Canvas.Top"
						TargetName="OpaqueRect"
						Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
				<Setter Property="Canvas.Left"
						TargetName="OpaqueRect"
						Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<Style TargetType="{x:Type exc:MenuItemEx}">
		<Setter Property="HorizontalContentAlignment"
				Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment"
				Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="BackgroundMouseOver"
				Value="Gray" />
		<Setter Property="BorderBrush"
				Value="Transparent" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="ScrollViewer.PanningMode"
				Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled"
				Value="False" />
		<Setter Property="Template"
				Value="{StaticResource SubmenuItemTemplateKey}" />
		<Style.Triggers>
			<Trigger Property="Role"
					 Value="TopLevelHeader">
				<!--<Setter Property="Background" Value="Transparent"/>
					<Setter Property="BorderBrush" Value="Transparent"/>
					<Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>-->
				<Setter Property="Template"
						Value="{StaticResource TopLevelHeaderTemplateKey}" />
				<Setter Property="Padding"
						Value="6,0" />
			</Trigger>
			<Trigger Property="Role"
					 Value="TopLevelItem">
				<!--<Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
					<Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Border}"/>
					<Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>-->
				<Setter Property="Template"
						Value="{StaticResource TopLevelItemTemplateKey}" />
				<Setter Property="Padding"
						Value="6,0" />
			</Trigger>
			<Trigger Property="Role"
					 Value="SubmenuHeader">
				<Setter Property="Template"
						Value="{StaticResource SubmenuHeaderTemplateKey}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<!--#endregion MenuItemEx-->

	<!--#region TextBoxEx-->
	<SolidColorBrush x:Key="TextBox.Static.Border"
					 Color="#FFABAdB3" />
	<SolidColorBrush x:Key="TextBox.MouseOver.Border"
					 Color="#FF7EB4EA" />
	<SolidColorBrush x:Key="TextBox.Focus.Border"
					 Color="#FF569DE5" />
	<ControlTemplate x:Key="DefaultTextBoxExTemplate"
					 TargetType="{x:Type exc:TextBoxEx}">
		<Border x:Name="border"
				Background="{TemplateBinding Background}"
				BorderThickness="{TemplateBinding BorderThickness}"
				BorderBrush="{TemplateBinding BorderBrush}"
				CornerRadius="{TemplateBinding CornerRadius}"
				SnapsToDevicePixels="True">
			<ScrollViewer x:Name="PART_ContentHost"
						  Focusable="false"
						  HorizontalScrollBarVisibility="Hidden"
						  VerticalScrollBarVisibility="Hidden" />
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter TargetName="border"
						Property="Opacity"
						Value="0.56" />
			</Trigger>
			<Trigger Property="IsMouseOver"
					 Value="true">
				<Setter TargetName="border"
						Property="BorderBrush"
						Value="{StaticResource TextBox.MouseOver.Border}" />
			</Trigger>
			<Trigger Property="IsKeyboardFocused"
					 Value="true">
				<Setter TargetName="border"
						Property="BorderBrush"
						Value="{StaticResource TextBox.Focus.Border}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="HintTextBoxExTemplate"
					 TargetType="{x:Type exc:TextBoxEx}">
		<Border x:Name="border"
				Background="{TemplateBinding Background}"
				BorderThickness="{TemplateBinding BorderThickness}"
				BorderBrush="{TemplateBinding BorderBrush}"
				CornerRadius="{TemplateBinding CornerRadius}"
				SnapsToDevicePixels="True">
			<Grid Focusable="False">
				<ScrollViewer x:Name="PART_ContentHost"
							  Focusable="False"
							  HorizontalScrollBarVisibility="Hidden"
							  VerticalScrollBarVisibility="Hidden" />
				<TextBlock x:Name="hint"
						   Visibility="Hidden"
						   Text="{TemplateBinding HintText}"
						   Opacity="0.5"
						   Background="{x:Null}"
						   Foreground="{TemplateBinding Foreground}"
						   FontSize="{TemplateBinding FontSize}"
						   FontWeight="{TemplateBinding FontWeight}"
						   FontFamily="{TemplateBinding FontFamily}"
						   FontStretch="{TemplateBinding FontStretch}"
						   FontStyle="{TemplateBinding FontStyle}"
						   Padding="2,0,2,0"
						   Margin="{TemplateBinding Padding}"
						   TextAlignment="{TemplateBinding TextAlignment}"
						   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						   TextWrapping="{TemplateBinding TextWrapping}"
						   FlowDirection="{TemplateBinding FlowDirection}"
						   Focusable="False"
						   IsHitTestVisible="False" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter TargetName="border"
						Property="Opacity"
						Value="0.56" />
			</Trigger>
			<Trigger Property="IsMouseOver"
					 Value="true">
				<Setter TargetName="border"
						Property="BorderBrush"
						Value="{StaticResource TextBox.MouseOver.Border}" />
			</Trigger>
			<Trigger Property="IsKeyboardFocused"
					 Value="true">
				<Setter TargetName="border"
						Property="BorderBrush"
						Value="{StaticResource TextBox.Focus.Border}" />
			</Trigger>
			<Trigger Property="Text"
					 Value="">
				<Setter TargetName="hint"
						Property="Visibility"
						Value="Visible" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style TargetType="exc:TextBoxEx">
		<Setter Property="Background"
				Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource TextBox.Static.Border}" />
		<Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="KeyboardNavigation.TabNavigation"
				Value="None" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="AllowDrop"
				Value="true" />
		<Setter Property="ScrollViewer.PanningMode"
				Value="VerticalFirst" />
		<Setter Property="Stylus.IsFlicksEnabled"
				Value="False" />
		<Setter Property="CornerRadius"
				Value="0" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Template"
				Value="{StaticResource HintTextBoxExTemplate}" />
		<Style.Triggers>
			<Trigger Property="HintText"
					 Value="{x:Null}">
				<Setter Property="Template"
						Value="{StaticResource DefaultTextBoxExTemplate}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsInactiveSelectionHighlightEnabled"
							   Value="true" />
					<Condition Property="IsSelectionActive"
							   Value="false" />
				</MultiTrigger.Conditions>
				<Setter Property="SelectionBrush"
						Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
			</MultiTrigger>
		</Style.Triggers>
	</Style>
	<!--#endregion TextBoxEx-->

	<!--#region ListBoxEx-->
	<Style TargetType="{x:Type exc:ListBoxEx}">
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="BorderBrush"
				Value="Transparent" />
		<Setter Property="Foreground"
				Value="Red" />
		<Setter Property="BackgroundDisabled"
				Value="#FFFFFFFF" />
		<Setter Property="FocusSelectedItem"
				Value="False" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Hidden" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Hidden" />
		<Setter Property="ScrollViewer.CanContentScroll"
				Value="true" />
		<Setter Property="ScrollViewer.PanningMode"
				Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled"
				Value="False" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type exc:ListBoxEx}">
					<Border x:Name="Bd"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Padding="0"
							SnapsToDevicePixels="true">
						<ScrollViewer Focusable="false"
									  Padding="{TemplateBinding Padding}">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Background"
									TargetName="Bd"
									Value="{Binding BackgroundDisabled}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsGrouping"
										   Value="true" />
								<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
										   Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="ScrollViewer.CanContentScroll"
									Value="false" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="{x:Type ListBoxItem}">
					<Style.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="False" />
								<Condition Property="IsMouseOver"
										   Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Opacity"
									Value="0.7" />
						</MultiTrigger>
						<Trigger Property="IsSelected"
								 Value="true">
							<Setter Property="Opacity"
									Value="1.0" />
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}"
										   Value="False" />
								<Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=exc:ListBoxEx}, Path=FocusSelectedItem}"
										   Value="True" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<Setter Property="IsEnabled"
										Value="False" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}"
										   Value="True" />
								<Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=exc:ListBoxEx}, Path=FocusSelectedItem}"
										   Value="True" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<Setter Property="IsTabStop"
										Value="False" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
					</Style.Triggers>
					<Setter Property="FocusVisualStyle"
							Value="{x:Null}" />
					<Setter Property="Opacity"
							Value="0.4" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ListBoxItem}">
								<ContentPresenter />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion ListViewEx-->

	<!--#region ToggleButtonImg-->
	<Style TargetType="{x:Type exc:ToggleButtonImg}">
		<Setter Property="CornerRadius"
				Value="0" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="Cursor"
				Value="Hand" />
		<!--#region Background defaults-->
		<Setter Property="Background"
				Value="#BB86FC" />
		<Setter Property="BackgroundMouseOver"
				Value="#FFA26FE0" />
		<Setter Property="BackgroundClick"
				Value="#FF8351BF" />
		<Setter Property="BackgroundDisabled"
				Value="#FF767676" />
		<!--#endregion-->
		<Setter Property="BorderBrush"
				Value="{x:Null}" />
		<Setter Property="BorderThickness"
				Value="0" />
		<!--#region opacity defaults-->
		<Setter Property="Opacity"
				Value="1" />
		<Setter Property="OpacityDefault"
				Value="1" />
		<Setter Property="OpacityMouseOver"
				Value="1" />
		<Setter Property="OpacityClick"
				Value="1" />
		<!--#endregion-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate x:Name="controlTemplate"
								 TargetType="{x:Type exc:ToggleButtonImg}">
					<Border x:Name="border"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							SnapsToDevicePixels="true"
							Opacity="{TemplateBinding OpacityDefault}"
							CornerRadius="{TemplateBinding CornerRadius}">
						<Image x:Name="image"
							   Focusable="False"
							   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							   Margin="{TemplateBinding Padding}"
							   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							   Source="{TemplateBinding UncheckedImage}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="True">
							<Setter TargetName="border"
									Property="Opacity"
									Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OpacityMouseOver, Mode=OneWay}" />
							<Setter TargetName="border"
									Property="Background"
									Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundMouseOver, Mode=OneWay}" />
						</Trigger>
						<Trigger Property="IsPressed"
								 Value="True">
							<Setter TargetName="border"
									Property="Opacity"
									Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OpacityClick, Mode=OneWay}" />
							<Setter TargetName="border"
									Property="Background"
									Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundClick, Mode=OneWay}" />
						</Trigger>
						<Trigger Property="IsEnabled"
								 Value="False">
							<Setter TargetName="border"
									Property="Background"
									Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundDisabled, Mode=OneWay}" />
						</Trigger>
						<Trigger Property="IsChecked"
								 Value="True">
							<Setter TargetName="image"
									Property="Source"
									Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedImage, Mode=OneWay}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion ToggleButtonImg-->

	<!--#region LoadingControlEx-->
	<Style TargetType="{x:Type exc:LoadingControlEx}">
		<Setter Property="Foreground"
				Value="White" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type exc:LoadingControlEx}">
					<Image Name="spinningImage"
						   Margin="{TemplateBinding Padding}">
						<Image.Source>
							<DrawingImage>
								<DrawingImage.Drawing>
									<DrawingGroup ClipGeometry="M0,0 V100 H100 V0 H0 Z">
										<DrawingGroup Opacity="0.916">
											<GeometryDrawing x:Name="Dot0"
															 Brush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground, Mode=OneTime}">
												<GeometryDrawing.Geometry>
													<RectangleGeometry RadiusX="9.4"
																	   RadiusY="4.8"
																	   Rect="47,24,6,12" />
												</GeometryDrawing.Geometry>
											</GeometryDrawing>
										</DrawingGroup>
										<DrawingGroup Opacity="0.833"
													  Transform="0.866025403784439,0.5,-0.5,0.866025403784439,31.6987298107781,-18.3012701892219">
											<GeometryDrawing x:Name="Dot1"
															 Brush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground, Mode=OneTime}">
												<GeometryDrawing.Geometry>
													<RectangleGeometry RadiusX="9.4"
																	   RadiusY="4.8"
																	   Rect="47,24,6,12" />
												</GeometryDrawing.Geometry>
											</GeometryDrawing>
										</DrawingGroup>
										<DrawingGroup Opacity="0.750"
													  Transform="0.5,0.866025403784439,-0.866025403784439,0.5,68.3012701892219,-18.3012701892219">
											<GeometryDrawing x:Name="Dot2"
															 Brush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground, Mode=OneTime}">
												<GeometryDrawing.Geometry>
													<RectangleGeometry RadiusX="9.4"
																	   RadiusY="4.8"
																	   Rect="47,24,6,12" />
												</GeometryDrawing.Geometry>
											</GeometryDrawing>
										</DrawingGroup>
										<DrawingGroup Opacity="0.666"
													  Transform="6.12303176911189E-17,1,-1,6.12303176911189E-17,100,0">
											<GeometryDrawing x:Name="Dot3"
															 Brush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground, Mode=OneTime}">
												<GeometryDrawing.Geometry>
													<RectangleGeometry RadiusX="9.4"
																	   RadiusY="4.8"
																	   Rect="47,24,6,12" />
												</GeometryDrawing.Geometry>
											</GeometryDrawing>
										</DrawingGroup>
										<DrawingGroup Opacity="0.583"
													  Transform="-0.5,0.866025403784439,-0.866025403784439,-0.5,118.301270189222,31.6987298107781">
											<GeometryDrawing x:Name="Dot4"
															 Brush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground, Mode=OneTime}">
												<GeometryDrawing.Geometry>
													<RectangleGeometry RadiusX="9.4"
																	   RadiusY="4.8"
																	   Rect="47,24,6,12" />
												</GeometryDrawing.Geometry>
											</GeometryDrawing>
										</DrawingGroup>
										<DrawingGroup Opacity="0.500"
													  Transform="-0.866025403784439,0.5,-0.5,-0.866025403784439,118.301270189222,68.3012701892219">
											<GeometryDrawing x:Name="Dot5"
															 Brush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground, Mode=OneTime}">
												<GeometryDrawing.Geometry>
													<RectangleGeometry RadiusX="9.4"
																	   RadiusY="4.8"
																	   Rect="47,24,6,12" />
												</GeometryDrawing.Geometry>
											</GeometryDrawing>
										</DrawingGroup>
										<DrawingGroup Opacity="0.416"
													  Transform="-1,1.22460635382238E-16,-1.22460635382238E-16,-1,100,100">
											<GeometryDrawing x:Name="Dot6"
															 Brush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground, Mode=OneTime}">
												<GeometryDrawing.Geometry>
													<RectangleGeometry RadiusX="9.4"
																	   RadiusY="4.8"
																	   Rect="47,24,6,12" />
												</GeometryDrawing.Geometry>
											</GeometryDrawing>
										</DrawingGroup>
										<DrawingGroup Opacity="0.333"
													  Transform="-0.866025403784439,-0.5,0.5,-0.866025403784439,68.3012701892219,118.301270189222">
											<GeometryDrawing x:Name="Dot7"
															 Brush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground, Mode=OneTime}">
												<GeometryDrawing.Geometry>
													<RectangleGeometry RadiusX="9.4"
																	   RadiusY="4.8"
																	   Rect="47,24,6,12" />
												</GeometryDrawing.Geometry>
											</GeometryDrawing>
										</DrawingGroup>
										<DrawingGroup Opacity="0.250"
													  Transform="-0.5,-0.866025403784438,0.866025403784438,-0.5,31.6987298107781,118.301270189222">
											<GeometryDrawing x:Name="Dot8"
															 Brush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground, Mode=OneTime}">
												<GeometryDrawing.Geometry>
													<RectangleGeometry RadiusX="9.4"
																	   RadiusY="4.8"
																	   Rect="47,24,6,12" />
												</GeometryDrawing.Geometry>
											</GeometryDrawing>
										</DrawingGroup>
										<DrawingGroup Opacity="0.166"
													  Transform="-1.83690953073357E-16,-1,1,-1.83690953073357E-16,7.105427357601E-15,100">
											<GeometryDrawing x:Name="Dot9"
															 Brush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground, Mode=OneTime}">
												<GeometryDrawing.Geometry>
													<RectangleGeometry RadiusX="9.4"
																	   RadiusY="4.8"
																	   Rect="47,24,6,12" />
												</GeometryDrawing.Geometry>
											</GeometryDrawing>
										</DrawingGroup>
										<DrawingGroup Opacity="0.083"
													  Transform="0.5,-0.866025403784439,0.866025403784439,0.5,-18.3012701892219,68.3012701892219">
											<GeometryDrawing x:Name="Dot10"
															 Brush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground, Mode=OneTime}">
												<GeometryDrawing.Geometry>
													<RectangleGeometry RadiusX="9.4"
																	   RadiusY="4.8"
																	   Rect="47,24,6,12" />
												</GeometryDrawing.Geometry>
											</GeometryDrawing>
										</DrawingGroup>
										<DrawingGroup Opacity="0"
													  Transform="0.866025403784438,-0.5,0.5,0.866025403784438,-18.3012701892219,31.6987298107781">
											<GeometryDrawing x:Name="Dot11"
															 Brush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground, Mode=OneTime}">
												<GeometryDrawing.Geometry>
													<RectangleGeometry RadiusX="9.4"
																	   RadiusY="4.8"
																	   Rect="47,24,6,12" />
												</GeometryDrawing.Geometry>
											</GeometryDrawing>
										</DrawingGroup>
									</DrawingGroup>
								</DrawingImage.Drawing>
							</DrawingImage>
						</Image.Source>
					</Image>
					<ControlTemplate.Triggers>
						<Trigger Property="IsVisible"
								 Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Name="SpinnerAnimation">
									<Storyboard RepeatBehavior="Forever"
												Storyboard.TargetName="spinningImage">
										<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
																	   Storyboard.TargetProperty="Source.Drawing.Children[0].Opacity"
																	   BeginTime="0:0:0.916">
											<LinearDoubleKeyFrame KeyTime="0:0:0"
																  Value="1" />
											<LinearDoubleKeyFrame KeyTime="0:0:1"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
																	   Storyboard.TargetProperty="Source.Drawing.Children[1].Opacity"
																	   BeginTime="0:0:0.833">
											<LinearDoubleKeyFrame KeyTime="0:0:0"
																  Value="1" />
											<LinearDoubleKeyFrame KeyTime="0:0:1"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
																	   Storyboard.TargetProperty="Source.Drawing.Children[2].Opacity"
																	   BeginTime="0:0:0.750">
											<LinearDoubleKeyFrame KeyTime="0:0:0"
																  Value="1" />
											<LinearDoubleKeyFrame KeyTime="0:0:1"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
																	   Storyboard.TargetProperty="Source.Drawing.Children[3].Opacity"
																	   BeginTime="0:0:0.666">
											<LinearDoubleKeyFrame KeyTime="0:0:0"
																  Value="1" />
											<LinearDoubleKeyFrame KeyTime="0:0:1"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
																	   Storyboard.TargetProperty="Source.Drawing.Children[4].Opacity"
																	   BeginTime="0:0:0.583">
											<LinearDoubleKeyFrame KeyTime="0:0:0"
																  Value="1" />
											<LinearDoubleKeyFrame KeyTime="0:0:1"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
																	   Storyboard.TargetProperty="Source.Drawing.Children[5].Opacity"
																	   BeginTime="0:0:0.500">
											<LinearDoubleKeyFrame KeyTime="0:0:0"
																  Value="1" />
											<LinearDoubleKeyFrame KeyTime="0:0:1"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
																	   Storyboard.TargetProperty="Source.Drawing.Children[6].Opacity"
																	   BeginTime="0:0:0.416">
											<LinearDoubleKeyFrame KeyTime="0:0:0"
																  Value="1" />
											<LinearDoubleKeyFrame KeyTime="0:0:1"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
																	   Storyboard.TargetProperty="Source.Drawing.Children[7].Opacity"
																	   BeginTime="0:0:0.333">
											<LinearDoubleKeyFrame KeyTime="0:0:0"
																  Value="1" />
											<LinearDoubleKeyFrame KeyTime="0:0:1"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
																	   Storyboard.TargetProperty="Source.Drawing.Children[8].Opacity"
																	   BeginTime="0:0:0.250">
											<LinearDoubleKeyFrame KeyTime="0:0:0"
																  Value="1" />
											<LinearDoubleKeyFrame KeyTime="0:0:1"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
																	   Storyboard.TargetProperty="Source.Drawing.Children[9].Opacity"
																	   BeginTime="0:0:0.166">
											<LinearDoubleKeyFrame KeyTime="0:0:0"
																  Value="1" />
											<LinearDoubleKeyFrame KeyTime="0:0:1"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
																	   Storyboard.TargetProperty="Source.Drawing.Children[10].Opacity"
																	   BeginTime="0:0:0.083">
											<LinearDoubleKeyFrame KeyTime="0:0:0"
																  Value="1" />
											<LinearDoubleKeyFrame KeyTime="0:0:1"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
																	   Storyboard.TargetProperty="Source.Drawing.Children[11].Opacity"
																	   BeginTime="0:0:0">
											<LinearDoubleKeyFrame KeyTime="0:0:0"
																  Value="1" />
											<LinearDoubleKeyFrame KeyTime="0:0:1"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<RemoveStoryboard BeginStoryboardName="SpinnerAnimation" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion LoadingControlEx-->

	<!--#region SwitchBox -->
	<Style TargetType="{x:Type exc:SwitchBox}">
		<Setter Property="SwitchBackgroundOn"
				Value="CadetBlue" />
		<Setter Property="SwitchBackgroundOff"
				Value="White" />
		<Setter Property="Background"
				Value="LightGray" />
		<Setter Property="BorderBrush"
				Value="Black" />
		<Setter Property="BorderThickness"
				Value="2" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="StatusOff"
				Value="Off" />
		<Setter Property="StatusOn"
				Value="On" />
		<Setter Property="Padding"
				Value="0,0,2,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type exc:SwitchBox}">
					<DockPanel SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<ContentPresenter Name="PART_content"
										  Content="{TemplateBinding Content}"
										  RecognizesAccessKey="True"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  Margin="{TemplateBinding Padding}" />

						<Border Name="PART_staticBorder"
								CornerRadius="4"
								MinWidth="50"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}">
							<Border Name="PART_movableBorder"
									CornerRadius="3"
									Background="{TemplateBinding SwitchBackground}"
									HorizontalAlignment="Left">
								<ContentPresenter Content="{TemplateBinding CurrentStatus}"
												  VerticalAlignment="Center"
												  HorizontalAlignment="Center" />
							</Border>
						</Border>
					</DockPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="HasContent"
								 Value="False">
							<Setter TargetName="PART_content"
									Property="Visibility"
									Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion SwitchBox-->

	<!--#region SortingToggleButton-->
	<Style TargetType="{x:Type exc:SortingToggleButton}">
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="BorderBrush"
				Value="{x:Null}" />
		<Setter Property="Foreground"
				Value="#FFFFFF" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="IsThreeState"
				Value="True" />
		<Setter Property="IsChecked"
				Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type exc:SortingToggleButton}">
					<Border x:Name="border"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="true">
						<StackPanel Orientation="Horizontal"
									Focusable="False">
							<ContentPresenter x:Name="contentPresenter"
											  Content="{TemplateBinding Content}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											  Margin="{TemplateBinding Padding}"
											  RecognizesAccessKey="True"
											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							<ContentPresenter x:Name="PART_sortingSymbol"
											  Content="&#xE8CB;"
											  TextBlock.FontFamily="Segoe MDL2 Assets"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											  Margin="{TemplateBinding Padding}"
											  RecognizesAccessKey="True"
											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</StackPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="True">
							<Setter Property="Background"
									Value="#7F03DAC5" />
						</Trigger>
						<Trigger Property="IsChecked"
								 Value="False">
							<Setter TargetName="PART_sortingSymbol"
									Property="Content"
									Value="&#xE74A;" />
						</Trigger>
						<Trigger Property="IsChecked"
								 Value="True">
							<Setter TargetName="PART_sortingSymbol"
									Property="Content"
									Value="&#xE74B;" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion SortingToggleButton-->
</ResourceDictionary>
